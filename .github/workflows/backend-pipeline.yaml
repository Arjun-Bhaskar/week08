name: Backend Pipeline

on:
  workflow_call:   # âœ… allows complete-pipeline.yml to call it
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports: ['5432:5432']
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set IMAGE_TAG
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "IMAGE_TAG=prod" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=staging" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend:${IMAGE_TAG} .
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend:${IMAGE_TAG}

  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Staging
        run: |
          az aks get-credentials --resource-group ${{ secrets.STAGING_RESOURCE_GROUP }} --name ${{ secrets.STAGING_AKS_CLUSTER }}
          kubectl set image deployment/backend backend=${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend:staging

  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Production
        run: |
          az aks get-credentials --resource-group ${{ secrets.PRODUCTION_RESOURCE_GROUP }} --name ${{ secrets.PRODUCTION_AKS_CLUSTER }}
          kubectl set image deployment/backend backend=${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend:prod
