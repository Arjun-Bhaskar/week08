name: Frontend Pipeline

on:
  workflow_call:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          cd frontend
          npm install
      - name: Run Lint & Tests
        run: |
          cd frontend
          npx eslint . --max-warnings=0
          npm test

  build:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set IMAGE_TAG
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "IMAGE_TAG=prod" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=staging" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:${IMAGE_TAG} ./frontend
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:${IMAGE_TAG}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to AKS
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            az aks get-credentials --resource-group ${{ secrets.PRODUCTION_RESOURCE_GROUP }} --name ${{ secrets.PRODUCTION_AKS_CLUSTER }}
            kubectl set image deployment/frontend frontend=${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:prod
          else
            az aks get-credentials --resource-group ${{ secrets.STAGING_RESOURCE_GROUP }} --name ${{ secrets.STAGING_AKS_CLUSTER }}
            kubectl set image deployment/frontend frontend=${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:staging
